# -*- coding: utf-8 -*-
"""Lab2Q4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EIn2XYDffiMa8U5gxX5pnuMDHcQA4GXC

Q4.Write a program to create a class Box with data members length, breadth, height, area, and volume. Provider constructor that enables initialization with one parameter (for cube), two parameters (for square prism) three parameters (rectangular prism). Also, provide functions to calculate area and volume. Create a list of N boxes with random measurements and print the details of the box with maximum volume: area ratio.
"""

import random

class Box:
  def __init__(show,*args):
    if len(args) == 1:
      show.__length = args[0]
      show.__breadth = args[0]
      show.__height = args[0]
    elif len(args) == 2:
      show.__length = args[0]
      show.__breadth = args[0]
      show.__height = args[1]
    else:
      show.__length = args[0]
      show.__breadth = args[1]
      show.__height = args[2]

  def calcArea(show):
    show.__area = show.__length*show.__breadth
    return show.__area

  def calcVolume(show):
    show.__volume = show.__length*show.__breadth*show.__height
    return show.__volume

  def displayArea(show):
    print("The area is : ",show.__area)

  def displayVolume(show):
    print("The volume is : ",show.__volume,"\n")

ratio = []

cube_dimension = []
cube_dimension.append(random.randint(1,1000))
print("Cube Prism - Dimension" , end = " ")
print(cube_dimension)

cube_prism = Box(cube_dimension[0])
area1=cube_prism.calcArea()
volume1=cube_prism.calcVolume()
cube_prism.displayArea()
cube_prism.displayVolume()

ratio.append((volume1/area1))

square_dimension = []
for i in range(2):
  square_dimension.append(random.randint(1,1000))
print("Square Prism - Dimension" , end = " ")
print(square_dimension)

square_prism = Box(square_dimension[0],square_dimension[1])
area2=square_prism.calcArea()
volume2=square_prism.calcVolume()
square_prism.displayArea()
square_prism.displayVolume()

ratio.append((volume2/area2))

rectangular_dimension = []
for i in range(3):
  rectangular_dimension.append(random.randint(1,1000))

print("Rectangular Prism - Dimension" , end = " ")
print(rectangular_dimension)
rectangular_prism = Box(rectangular_dimension[0],rectangular_dimension[1],rectangular_dimension[2])
area3 = rectangular_prism.calcArea()
volume3 = rectangular_prism.calcVolume()
rectangular_prism.displayArea()
rectangular_prism.displayVolume()

ratio.append((volume3/area3))
index = ratio.index(max(ratio))

if index == 0:
  print("Cube Prism with Maximum Volume : Area - ", end=" ")
  print(cube_dimension)
elif index == 1:
  print("Square Prism with Maximum Volume : Area - " , end=" ")
  print(square_dimension)
else:
  print("Rectangular Prism with Maximum Volume : Area - ", end=" ")
  print(rectangular_dimension)