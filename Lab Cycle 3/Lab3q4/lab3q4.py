# -*- coding: utf-8 -*-
"""Lab3q4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13zCQ-n1fla1jiykNi8ox7c8eSeJLpqtG
"""

import pickle,tabulate
class vehicle_attributes:

  _key_list = ["id","ownerName","vendor","model","type","registrationNumber","engineNumber","mileage"]
  _dataBase = dict.fromkeys(_key_list, None)

class Vehicles(vehicle_attributes):
  __list_vehicles = list()
  __id = 0
  def Add_entries(self):
    option = 1
    while option==1:
      self.__id = self.__id + 1
      entry_list = list()
      entry_list.append(self.__id)
      entry_list.append(input("Owner Name : "))
      entry_list.append(input("Vendor Name : "))
      entry_list.append(input("Model Name : "))
      entry_list.append(input("Type : "))
      entry_list.append(int(input("Registration Number : ")))
      entry_list.append(int(input("Engine Number : ")))
      entry_list.append(float(input("Mileage : ")))
      
      for i,key in zip(entry_list,self._dataBase):
        self._dataBase[key] = i
      self.__list_vehicles.append(self._dataBase.copy())
      option = int(input("Do you want to add more entries\n1.Add\n2.Exit\n"))

  def Delete_entries(self):
    found = False
    search_key = int(input("Enter your ID : "))
    for i in range(len(self.__list_vehicles)):
      if self.__list_vehicles[i]['id']==search_key:
        found = True
        del self.__list_vehicles[i]
        break
    if(not found):
      print("Invalid ID!!")
  
  def Modify_entries(self):
    found = False
    search_key = int(input("Enter your ID : "))
    for i in self.__list_vehicles:
      if i['id']==search_key:
        found = True
        print("Choose the attribute you want to change")
        print("1.Owner Name\n2.Vendor Name\n3.Model Name")
        print("4.Type\n5.Registration Number\n6.Engine Number")
        print("7.Mileage")
        option = int(input('Enter your choice : '))
        if option==1:
          i['ownerName'] = input("Owner Name : ")
        elif option==2:
          i['vendor'] = input("Vendor Name : ")
        elif option==3:
          i['model'] = input("Model Name : ")   
        elif option==4:
          i['type'] = input("Type : ")
        elif option==5:
          i['registrationNumber'] = int(input("Registration Number : "))    
        elif option==6:
          i['engineNumber'] = int(input("Engine Number : "))
        elif option==7:
          i['mileage'] = float(input("Mileage : "))
    if(not found):
      print("Invalid Key!!")

  def display(self,*args):
    header = ['Id','Owner','Vendor','Model','Type','Registration Number','Engine Number','Mileage']
    if(len(args)==0):
      rows =  [x.values() for x in self.__list_vehicles]
      print(tabulate.tabulate(rows, header,tablefmt='grid'))
    elif (len(args)==2):
      print("\n",args[0])
      rows = [x.values() for x in args[1]]
      print(tabulate.tabulate(rows, header,tablefmt='grid'))

  def Sort_mileage(self):
    sorted_list = sorted(self.__list_vehicles,key = lambda i:i['mileage'])
    self.display("Mileage Sorted List",sorted_list)

  def create_file(self):
    pickle.dump(self.__list_vehicles,open("vehicleDetails.pkl","wb"))

  def filter_attributes(self):
    print("Choose the attribute which you want to filter\n1.Owner Name")
    print("2.Vendor\n3.Model Name\n4.Type\n5.Mileage")
    option = int(input("Option : "))
    filtered_ist = list()
    if(option==1):
      filter_key = (input("Enter the name you want to filter"))
      filtered_list = [i for i in self.__list_vehicles if i['ownerName']== filter_key]
      self.display("Filtered List",filtered_list)
    elif (option==2):
      filter_key = (input("Enter the name you want to filter"))
      filtered_list = [i for i in self.__list_vehicles if i['vendor']== filter_key]
      self.display("Filtered List",filtered_list)
    elif (option==3):
      filter_key = (input("Enter the name you want to filter"))
      filtered_list = [i for i in self.__list_vehicles if i['model']== filter_key]
      self.display("Filtered List",filtered_list)
    elif (option==4):
      filter_key = (input("Enter the name you want to filter"))
      filtered_list = [i for i in self.__list_vehicles if i['type']== filter_key]
      self.display("Filtered List",filtered_list)
    elif(option==5):
      filter_key = float(input("Enter the name you want to filter"))
      filtered_list = [i for i in self.__list_vehicles if i['mileage']== filter_key]
      self.display("Filtered List",filtered_list)
  def load_file(self,file_path):
    self.__list_vehicles = pickle.load(open(file_path,"rb"))
    id_List = [self.__list_vehicles[i]['id'] for i in range(len(self.__list_vehicles))]
    self.__id = max(id_List)

def main():
  vehicle_object = Vehicles()
  if(int(input("1.Add Entries\n2.Load Pickle\n"))==1):
    vehicle_object.Add_entries()  
  else:
    file_path = input("Enter the file name : ")
    vehicle_object.load_file(file_path)
  vehicle_object.display()
  ch=1
  while ch==1:
    print("1.Add Entries\n2.Modify Attributes\n3.Delete Attributes\n4.Display Entries")
    print("5.Sort According to Mileage\n6.Filter Attributes\n7.Create Pickle File\n8.Exit")
    choice = int(input())
    if choice==1:
      vehicle_object.Add_entries()
    elif choice==2:
      vehicle_object.Modify_entries()
    elif choice==3:
      vehicle_object.Delete_entries()
    elif choice==4:
      vehicle_object.display()
    elif choice==5:
      vehicle_object.Sort_mileage()
    elif choice==6:
      vehicle_object.filter_attributes()
    elif choice==7:
      vehicle_object.create_file()
    elif choice==8:
      break
  ch = int(input("\n1.Continue\n2.Exit"))

if __name__=="__main__":
  main()